{"version":3,"sources":["BottomTabBar.tsx"],"names":["DEFAULT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","Platform","OS","BottomTabBar","state","navigation","descriptors","activeBackgroundColor","activeTintColor","adaptive","allowFontScaling","inactiveBackgroundColor","inactiveTintColor","keyboardHidesTabBar","labelPosition","labelStyle","iconStyle","safeAreaInsets","showLabel","style","tabStyle","colors","buildLink","focusedRoute","routes","index","focusedDescriptor","key","focusedOptions","options","dimensions","isKeyboardShown","shouldShowTabBar","tabBarVisible","tabBarShowAnimationDuration","tabBarHideAnimationDuration","isTabBarHidden","setIsTabBarHidden","React","useState","visible","Animated","Value","useEffect","timing","toValue","duration","start","finished","layout","setLayout","height","width","handleLayout","e","nativeEvent","shouldUseHorizontalLabels","maxTabItemWidth","flattenedStyle","StyleSheet","flatten","maxWidth","length","isLandscape","defaultInsets","insets","top","right","bottom","left","paddingBottom","Math","max","styles","tabBar","backgroundColor","card","borderTopColor","border","transform","translateY","interpolate","inputRange","outputRange","position","paddingHorizontal","content","map","route","focused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","CommonActions","navigate","name","onLongPress","label","tabBarLabel","undefined","title","accessibilityLabel","tabBarAccessibilityLabel","params","tabBarTestID","tabBarButton","tabBarIcon","tabBarBadge","create","borderTopWidth","hairlineWidth","elevation","flex","flexDirection"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  Animated,\n  StyleSheet,\n  Platform,\n  LayoutChangeEvent,\n} from 'react-native';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  CommonActions,\n  useTheme,\n  useLinkBuilder,\n} from '@react-navigation/native';\nimport { useSafeArea } from 'react-native-safe-area-context';\n\nimport BottomTabItem from './BottomTabItem';\nimport useWindowDimensions from '../utils/useWindowDimensions';\nimport useIsKeyboardShown from '../utils/useIsKeyboardShown';\nimport type { BottomTabBarProps } from '../types';\n\ntype Props = BottomTabBarProps & {\n  activeTintColor?: string;\n  inactiveTintColor?: string;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 49;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  activeBackgroundColor,\n  activeTintColor,\n  adaptive = true,\n  allowFontScaling,\n  inactiveBackgroundColor,\n  inactiveTintColor,\n  keyboardHidesTabBar = false,\n  labelPosition,\n  labelStyle,\n  iconStyle,\n  safeAreaInsets,\n  showLabel,\n  style,\n  tabStyle,\n}: Props) {\n  const { colors } = useTheme();\n  const buildLink = useLinkBuilder();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const dimensions = useWindowDimensions();\n  const isKeyboardShown = useIsKeyboardShown();\n\n  const shouldShowTabBar =\n    focusedOptions.tabBarVisible !== false &&\n    !(keyboardHidesTabBar && isKeyboardShown);\n  const tabBarShowAnimationDuration =\n    typeof focusedOptions.tabBarShowAnimationDuration === 'undefined'\n      ? 250\n      : focusedOptions.tabBarShowAnimationDuration;\n  const tabBarHideAnimationDuration =\n    typeof focusedOptions.tabBarHideAnimationDuration === 'undefined'\n      ? 200\n      : focusedOptions.tabBarHideAnimationDuration;\n\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n\n  const [visible] = React.useState(\n    () => new Animated.Value(shouldShowTabBar ? 1 : 0)\n  );\n\n  React.useEffect(() => {\n    if (shouldShowTabBar) {\n      Animated.timing(visible, {\n        toValue: 1,\n        duration: tabBarShowAnimationDuration,\n        useNativeDriver,\n      }).start(({ finished }) => {\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      setIsTabBarHidden(true);\n\n      Animated.timing(visible, {\n        toValue: 0,\n        duration: tabBarHideAnimationDuration,\n        useNativeDriver,\n      }).start();\n    }\n  }, [\n    shouldShowTabBar,\n    visible,\n    tabBarShowAnimationDuration,\n    tabBarHideAnimationDuration,\n  ]);\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const { routes } = state;\n  const shouldUseHorizontalLabels = () => {\n    if (labelPosition) {\n      return labelPosition === 'beside-icon';\n    }\n\n    if (!adaptive) {\n      return false;\n    }\n\n    if (layout.width >= 768) {\n      // Screen size matches a tablet\n      let maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n      const flattenedStyle = StyleSheet.flatten(tabStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          maxTabItemWidth = flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          maxTabItemWidth = flattenedStyle.maxWidth;\n        }\n      }\n\n      return routes.length * maxTabItemWidth <= layout.width;\n    } else {\n      const isLandscape = dimensions.width > dimensions.height;\n\n      return isLandscape;\n    }\n  };\n\n  const defaultInsets = useSafeArea();\n\n  const insets = {\n    top: safeAreaInsets?.top ?? defaultInsets.top,\n    right: safeAreaInsets?.right ?? defaultInsets.right,\n    bottom: safeAreaInsets?.bottom ?? defaultInsets.bottom,\n    left: safeAreaInsets?.left ?? defaultInsets.left,\n  };\n\n  const paddingBottom = Math.max(insets.bottom - 4, 0);\n\n  return (\n    <Animated.View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor: colors.card,\n          borderTopColor: colors.border,\n        },\n        {\n          transform: [\n            {\n              translateY: visible.interpolate({\n                inputRange: [0, 1],\n                outputRange: [layout.height + paddingBottom, 0],\n              }),\n            },\n          ],\n          // Absolutely position the tab bar so that the content is below it\n          // This is needed to avoid gap at bottom when the tab bar is hidden\n          position: isTabBarHidden ? 'absolute' : null,\n        },\n        {\n          height: DEFAULT_TABBAR_HEIGHT + paddingBottom,\n          paddingBottom,\n          paddingHorizontal: Math.max(insets.left, insets.right),\n        },\n        style,\n      ]}\n      pointerEvents={isTabBarHidden ? 'none' : 'auto'}\n    >\n      <View style={styles.content} onLayout={handleLayout}>\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate(route.name),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string'\n              ? `${label}, tab, ${index + 1} of ${routes.length}`\n              : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  route={route}\n                  focused={focused}\n                  horizontal={shouldUseHorizontalLabels()}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  to={buildLink(route.name, route.params)}\n                  testID={options.tabBarTestID}\n                  allowFontScaling={allowFontScaling}\n                  activeTintColor={activeTintColor}\n                  inactiveTintColor={inactiveTintColor}\n                  activeBackgroundColor={activeBackgroundColor}\n                  inactiveBackgroundColor={inactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={options.tabBarIcon}\n                  badge={options.tabBarBadge}\n                  label={label}\n                  showLabel={showLabel}\n                  labelStyle={labelStyle}\n                  iconStyle={iconStyle}\n                  style={tabStyle}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"]}